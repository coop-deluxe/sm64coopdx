SMLUA_EVENT_HOOK(HOOK_UPDATE, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_MARIO_UPDATE, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_BEFORE_MARIO_UPDATE, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_ON_SET_MARIO_ACTION, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_BEFORE_PHYS_STEP, HOOK_RETURN_ON_OUTPUT_SET, struct MarioState *m, s32 stepType, u32 stepArg, OUTPUT s32 *stepResultOverride)
SMLUA_EVENT_HOOK(HOOK_ALLOW_PVP_ATTACK, HOOK_RETURN_NEVER, struct MarioState *attacker, struct MarioState *victim, u32 interaction, OUTPUT bool *allowAttack)
SMLUA_EVENT_HOOK(HOOK_ON_PVP_ATTACK, HOOK_RETURN_NEVER, struct MarioState *attacker, struct MarioState *victim, u32 interaction)
SMLUA_EVENT_HOOK(HOOK_ON_PLAYER_CONNECTED, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_ON_PLAYER_DISCONNECTED, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_ON_HUD_RENDER, _, void (*resetFunc)(void)) // Manually defined hook
SMLUA_EVENT_HOOK(HOOK_ALLOW_INTERACT, HOOK_RETURN_NEVER, struct MarioState *m, struct Object *obj, u32 interactType, OUTPUT bool *allowInteract)
SMLUA_EVENT_HOOK(HOOK_ON_INTERACT, HOOK_RETURN_NEVER, struct MarioState *m, struct Object *obj, u32 interactType, bool interactValue)
SMLUA_EVENT_HOOK(HOOK_ON_LEVEL_INIT, HOOK_RETURN_NEVER, u8 warpType, s16 levelNum, u8 areaIdx, u8 nodeId, u32 warpArg)
SMLUA_EVENT_HOOK(HOOK_ON_WARP, HOOK_RETURN_NEVER, u8 warpType, s16 levelNum, u8 areaIdx, u8 nodeId, u32 warpArg)
SMLUA_EVENT_HOOK(HOOK_ON_SYNC_VALID, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_ON_OBJECT_UNLOAD, HOOK_RETURN_NEVER, struct Object *obj)
SMLUA_EVENT_HOOK(HOOK_ON_SYNC_OBJECT_UNLOAD, HOOK_RETURN_NEVER, struct Object *obj)
SMLUA_EVENT_HOOK(HOOK_ON_PAUSE_EXIT, HOOK_RETURN_NEVER, bool usedExitToCastle, OUTPUT bool *allowExit)
SMLUA_EVENT_HOOK(HOOK_GET_STAR_COLLECTION_DIALOG, HOOK_RETURN_ON_SUCCESSFUL_CALL, OUTPUT s32 *dialogID)
SMLUA_EVENT_HOOK(HOOK_ON_SET_CAMERA_MODE, HOOK_RETURN_NEVER, struct Camera *c, s16 mode, s16 frames, OUTPUT bool *allowSetCameraMode)
SMLUA_EVENT_HOOK(HOOK_ON_OBJECT_RENDER, HOOK_RETURN_NEVER, struct Object *obj)
SMLUA_EVENT_HOOK(HOOK_ON_DEATH, HOOK_RETURN_NEVER, struct MarioState *m, OUTPUT bool *allowDeath)
SMLUA_EVENT_HOOK(HOOK_ON_PACKET_RECEIVE, HOOK_RETURN_NEVER, s32 modIndex, s32 valueIndex)
SMLUA_EVENT_HOOK(HOOK_USE_ACT_SELECT, HOOK_RETURN_ON_OUTPUT_SET, s32 levelNum, OUTPUT bool *useActSelect)
SMLUA_EVENT_HOOK(HOOK_ON_CHANGE_CAMERA_ANGLE, HOOK_RETURN_NEVER, s32 camAngleType, OUTPUT bool *allowSetCamAngle)
SMLUA_EVENT_HOOK(HOOK_ON_SCREEN_TRANSITION, HOOK_RETURN_NEVER, s32 transitionType, OUTPUT bool *allowPlayTransition)
SMLUA_EVENT_HOOK(HOOK_ALLOW_HAZARD_SURFACE, HOOK_RETURN_NEVER, struct MarioState *m, s32 hazardType, OUTPUT bool *allowHazard)
SMLUA_EVENT_HOOK(HOOK_ON_CHAT_MESSAGE, HOOK_RETURN_NEVER, struct MarioState *m, const char *message, OUTPUT bool *allowMessage)
SMLUA_EVENT_HOOK(HOOK_OBJECT_SET_MODEL, HOOK_RETURN_NEVER, struct Object *obj, s32 modelID, enum ModelExtendedId modelExtendedId)
SMLUA_EVENT_HOOK(HOOK_CHARACTER_SOUND, HOOK_RETURN_ON_OUTPUT_SET, struct MarioState *m, enum CharacterSound characterSound, OUTPUT s32 *soundOverride)
SMLUA_EVENT_HOOK(HOOK_BEFORE_SET_MARIO_ACTION, HOOK_RETURN_NEVER, struct MarioState *m, u32 action, u32 actionArg, OUTPUT u32 *actionOverride)
SMLUA_EVENT_HOOK(HOOK_JOINED_GAME, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_ON_OBJECT_ANIM_UPDATE, HOOK_RETURN_NEVER, struct Object *obj)
SMLUA_EVENT_HOOK(HOOK_ON_DIALOG, HOOK_RETURN_NEVER, s32 dialogID, OUTPUT bool *openDialogBox, OUTPUT const char **dialogTextOverride)
SMLUA_EVENT_HOOK(HOOK_ON_EXIT, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_DIALOG_SOUND, HOOK_RETURN_ON_OUTPUT_SET, s32 speaker, OUTPUT s32 *speakerOverride)
SMLUA_EVENT_HOOK(HOOK_ON_HUD_RENDER_BEHIND, _, void (*resetFunc)(void)) // Manually defined hook
SMLUA_EVENT_HOOK(HOOK_ON_COLLIDE_LEVEL_BOUNDS, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_MIRROR_MARIO_RENDER, HOOK_RETURN_NEVER, struct GraphNodeObject *mirrorMario, s32 playerIndex)
SMLUA_EVENT_HOOK(HOOK_MARIO_OVERRIDE_PHYS_STEP_DEFACTO_SPEED, HOOK_RETURN_ON_SUCCESSFUL_CALL, struct MarioState *m, OUTPUT f32 *floorNormalY)
SMLUA_EVENT_HOOK(HOOK_ON_OBJECT_LOAD, HOOK_RETURN_NEVER, struct Object *obj)
SMLUA_EVENT_HOOK(HOOK_ON_PLAY_SOUND, HOOK_RETURN_ON_OUTPUT_SET, s32 soundBits, Vec3f pos, OUTPUT s32 *soundBitsOverride)
SMLUA_EVENT_HOOK(HOOK_ON_SEQ_LOAD, HOOK_RETURN_ON_OUTPUT_SET, u32 seqPlayer, u32 seqId, s32 loadAsync, OUTPUT u32 *seqIdOverride)
SMLUA_EVENT_HOOK(HOOK_ON_ATTACK_OBJECT, HOOK_RETURN_NEVER, struct MarioState *m, struct Object *obj, s32 interaction)
SMLUA_EVENT_HOOK(HOOK_ON_LANGUAGE_CHANGED, HOOK_RETURN_NEVER, const char *langName)
SMLUA_EVENT_HOOK(HOOK_ON_MODS_LOADED, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_ON_NAMETAGS_RENDER, _, s32 playerIndex, Vec3f pos, OUTPUT const char **playerNameOverride) // Manually defined hook
SMLUA_EVENT_HOOK(HOOK_ON_DJUI_THEME_CHANGED, HOOK_RETURN_NEVER)
SMLUA_EVENT_HOOK(HOOK_ON_GEO_PROCESS, HOOK_RETURN_NEVER, struct GraphNode *node, s32 matStackIndex)
SMLUA_EVENT_HOOK(HOOK_BEFORE_GEO_PROCESS, HOOK_RETURN_NEVER, struct GraphNode *node, s32 matStackIndex)
SMLUA_EVENT_HOOK(HOOK_ON_GEO_PROCESS_CHILDREN, HOOK_RETURN_NEVER, struct GraphNode *parent, s32 matStackIndex)
SMLUA_EVENT_HOOK(HOOK_MARIO_OVERRIDE_GEOMETRY_INPUTS, HOOK_RETURN_NEVER, struct MarioState *m, OUTPUT bool *allowUpdateGeometryInputs)
SMLUA_EVENT_HOOK(HOOK_ON_INTERACTIONS, HOOK_RETURN_NEVER, struct MarioState *m)
SMLUA_EVENT_HOOK(HOOK_ALLOW_FORCE_WATER_ACTION, HOOK_RETURN_NEVER, struct MarioState *m, bool isInWaterAction, OUTPUT bool *allowForceAction)
SMLUA_EVENT_HOOK(HOOK_BEFORE_WARP, HOOK_RETURN_ON_OUTPUT_SET, s16 destLevel, s16 destArea, s16 destWarpNode, s32 arg, OUTPUT struct WarpDest *warpDestOverride)
SMLUA_EVENT_HOOK(HOOK_ON_INSTANT_WARP, HOOK_RETURN_NEVER, u8 areaIdx, u8 nodeId, Vec3s displacement)
SMLUA_EVENT_HOOK(HOOK_MARIO_OVERRIDE_FLOOR_CLASS, HOOK_RETURN_ON_OUTPUT_SET, struct MarioState *m, s32 floorClass, OUTPUT s32 *floorClassOverride)
SMLUA_EVENT_HOOK(HOOK_ON_ADD_SURFACE, HOOK_RETURN_NEVER, struct Surface *surface, bool dynamic)
SMLUA_EVENT_HOOK(HOOK_ON_CLEAR_AREAS, HOOK_RETURN_NEVER)
